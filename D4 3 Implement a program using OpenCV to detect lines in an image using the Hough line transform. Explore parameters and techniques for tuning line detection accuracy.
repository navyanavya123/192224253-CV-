import cv2
import numpy as np

def detect_lines(image_path, rho=1, theta=np.pi/180, threshold=100, min_line_length=100, max_line_gap=10):
    # Load the image
    image = cv2.imread(image_path, cv2.IMREAD_COLOR)
    if image is None:
        print(f"Error: Could not load image {image_path}")
        return None

    # Convert to grayscale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)

    # Apply Canny edge detector
    edges = cv2.Canny(gray, 50, 150, apertureSize=3)

    # Perform Hough Line Transform
    lines = cv2.HoughLinesP(edges, 
                            rho=rho, 
                            theta=theta, 
                            threshold=threshold, 
                            minLineLength=min_line_length, 
                            maxLineGap=max_line_gap)

    # If some lines are detected, let's draw them on the original image
    if lines is not None:
        for line in lines:
            x1, y1, x2, y2 = line[0]
            cv2.line(image, (x1, y1), (x2, y2), (0, 255, 0), 2)

    # Display the output
    cv2.imshow('Detected Lines', image)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

    return lines

# Example usage
image_path = 'path_to_your_image.jpg'
lines = detect_lines(image_path)

# Print detected lines
if lines is not None:
    print("Detected lines:")
    print(lines)
else:
    print("No lines detected.")
